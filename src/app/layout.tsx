import type { Metadata } from 'next'
import { Roboto } from 'next/font/google'
import './globals.css'
import { ThemeProvider } from '@/contexts/theme-context'
import { Menu, Venue } from '@/@types/api-type'
import { ReactNode } from 'react'
import { MenuProvider } from '@/contexts/menu-context'
import { NextIntlClientProvider } from 'next-intl'
import { getLocale, getMessages } from 'next-intl/server'
import { SettingsProvider } from '@/contexts/settings-contexts'
import { ReduxProvider } from '@/components/redux-provider'

const roboto = Roboto({
  weight: ['300', '400', '500', '700'],
  subsets: ['latin'],
})

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

async function fetchData(url: string) {
  const response = await fetch(url, {
    method: 'GET',
    next: { revalidate: 60 * 60 }, // revalidate every hour
  })
  if (!response.ok) {
    throw new Error(`HTTP error! status: ${response.status}`)
  }
  return response.json()
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: ReactNode
}>) {
  const [venueData, menuData] = await Promise.all([
    fetchData(
      'https://cdn-dev.preoday.com/challenge/venue/9',
    ) as Promise<Venue>,
    fetchData('https://cdn-dev.preoday.com/challenge/menu') as Promise<Menu>,
  ])

  const locale = await getLocale()
  const messages = await getMessages()

  const { webSettings, ...settings } = venueData

  return (
    <html lang={locale}>
      <body className={roboto.className}>
        <ReduxProvider>
          <ThemeProvider themeData={webSettings}>
            <MenuProvider menuData={menuData}>
              <SettingsProvider settingsData={settings}>
                <NextIntlClientProvider messages={messages}>
                  {children}
                </NextIntlClientProvider>
              </SettingsProvider>
            </MenuProvider>
          </ThemeProvider>
        </ReduxProvider>
      </body>
    </html>
  )
}
